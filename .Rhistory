guides(fill = guide_legend(title = "Experience Level Descriptions"))
# Create the same plot but for US-based companies only
salaries_df_ft_us$experience_level <- factor(salaries_df_ft_us$experience_level,
levels = c("EN", "MI", "SE", "EX"))
average_salary_per_level_us <- salaries_df_ft_us %>%
group_by(experience_level) %>%
summarise(average_salary = mean(salary_in_usd))
print(average_salary_per_level_us)
ggplot(salaries_df_ft_us, aes(x = experience_level, y = salary_in_usd,
fill = experience_level)) +
geom_boxplot() +
scale_y_continuous(labels = scales::comma_format()) +
labs(title = "Data Science Salary by Experience Level, US-based companies",
x = "Experience Level", y = "Salary (USD)") +
scale_fill_manual(values = c("EN" = "red", "MI" = "blue", "SE" = "green", "EX" = "purple"),
labels = exper_legend) +
guides(fill = guide_legend(title = "Experience Level Descriptions"))
# Create legend description
exper_legend <- c("EN" = "Entry-level / Junior",
"MI" = "Mid-level / Intermediate",
"SE" = "Senior-level / Expert",
"EX" = "Executive-level / Director")
# Order the levels of experience_level
salaries_df_ft$experience_level <- factor(salaries_df_ft$experience_level,
levels = c("EN", "MI", "SE", "EX"))
# Group by experience_level and calculate average salary for each level
average_salary_per_level <- salaries_df_ft %>%
group_by(experience_level) %>%
summarise(average_salary = mean(salary_in_usd))
# Print the table
print(average_salary_per_level)
# Create the plot
ggplot(salaries_df_ft, aes(x = experience_level, y = salary_in_usd,
fill = experience_level)) +
geom_boxplot() +
scale_y_continuous(labels = scales::comma_format()) +
labs(title = "Data Science Salary by Experience Level",
x = "Experience Level", y = "Salary (USD)") +
scale_fill_manual(values = c("EN" = "red", "MI" = "blue", "SE" = "green", "EX" = "purple"),
labels = exper_legend) +
guides(fill = guide_legend(title = "Experience Level Descriptions"))
# Create the same plot but for US-based companies only
salaries_df_ft_us$experience_level <- factor(salaries_df_ft_us$experience_level,
levels = c("EN", "MI", "SE", "EX"))
average_salary_per_level_us <- salaries_df_ft_us %>%
group_by(experience_level) %>%
summarise(average_salary = mean(salary_in_usd))
print(average_salary_per_level_us)
ggplot(salaries_df_ft_us, aes(x = experience_level, y = salary_in_usd,
fill = experience_level)) +
geom_boxplot() +
scale_y_continuous(labels = scales::comma_format()) +
labs(title = "Data Science Salary by Experience Level",
subtitle = "US-based companies",
x = "Experience Level", y = "Salary (USD)") +
scale_fill_manual(values = c("EN" = "red", "MI" = "blue", "SE" = "green", "EX" = "purple"),
labels = exper_legend) +
guides(fill = guide_legend(title = "Experience Level Descriptions"))
# Create legend description
exper_legend <- c("EN" = "Entry-level / Junior",
"MI" = "Mid-level / Intermediate",
"SE" = "Senior-level / Expert",
"EX" = "Executive-level / Director")
# Order the levels of experience_level
salaries_df_ft$experience_level <- factor(salaries_df_ft$experience_level,
levels = c("EN", "MI", "SE", "EX"))
# Group by experience_level and calculate average salary for each level
median_salary_per_level <- salaries_df_ft %>%
group_by(experience_level) %>%
summarise(median_salary = median(salary_in_usd))
# Print the table
print(median_salary_per_level)
# Create the plot
ggplot(salaries_df_ft, aes(x = experience_level, y = salary_in_usd,
fill = experience_level)) +
geom_boxplot() +
scale_y_continuous(labels = scales::comma_format()) +
labs(title = "Data Science Salary by Experience Level",
x = "Experience Level", y = "Salary (USD)") +
scale_fill_manual(values = c("EN" = "red", "MI" = "blue", "SE" = "green", "EX" = "purple"),
labels = exper_legend) +
guides(fill = guide_legend(title = "Experience Level Descriptions"))
# Create the same plot but for US-based companies only
salaries_df_ft_us$experience_level <- factor(salaries_df_ft_us$experience_level,
levels = c("EN", "MI", "SE", "EX"))
average_salary_per_level_us <- salaries_df_ft_us %>%
group_by(experience_level) %>%
summarise(average_salary = mean(salary_in_usd))
print(average_salary_per_level_us)
ggplot(salaries_df_ft_us, aes(x = experience_level, y = salary_in_usd,
fill = experience_level)) +
geom_boxplot() +
scale_y_continuous(labels = scales::comma_format()) +
labs(title = "Data Science Salary by Experience Level",
subtitle = "US-based companies",
x = "Experience Level", y = "Salary (USD)") +
scale_fill_manual(values = c("EN" = "red", "MI" = "blue", "SE" = "green", "EX" = "purple"),
labels = exper_legend) +
guides(fill = guide_legend(title = "Experience Level Descriptions"))
# Create legend description
exper_legend <- c("EN" = "Entry-level / Junior",
"MI" = "Mid-level / Intermediate",
"SE" = "Senior-level / Expert",
"EX" = "Executive-level / Director")
# Order the levels of experience_level
salaries_df_ft$experience_level <- factor(salaries_df_ft$experience_level,
levels = c("EN", "MI", "SE", "EX"))
# Group by experience_level and calculate average salary for each level
median_salary_per_level <- salaries_df_ft %>%
group_by(experience_level) %>%
summarise(median_salary = median(salary_in_usd))
# Print the table
print(median_salary_per_level)
# Create the plot
ggplot(salaries_df_ft, aes(x = experience_level, y = salary_in_usd,
fill = experience_level)) +
geom_boxplot() +
scale_y_continuous(labels = scales::comma_format()) +
labs(title = "Data Science Salary by Experience Level",
x = "Experience Level", y = "Salary (USD)") +
scale_fill_manual(values = c("EN" = "red", "MI" = "blue", "SE" = "green", "EX" = "purple"),
labels = exper_legend) +
guides(fill = guide_legend(title = "Experience Level Descriptions"))
# Create the same plot but for US-based companies only
salaries_df_ft_us$experience_level <- factor(salaries_df_ft_us$experience_level,
levels = c("EN", "MI", "SE", "EX"))
median_salary_per_level_us <- salaries_df_ft_us %>%
group_by(experience_level) %>%
summarise(median_salary = median(salary_in_usd))
print(median_salary_per_level_us)
ggplot(salaries_df_ft_us, aes(x = experience_level, y = salary_in_usd,
fill = experience_level)) +
geom_boxplot() +
scale_y_continuous(labels = scales::comma_format()) +
labs(title = "Data Science Salary by Experience Level",
subtitle = "US-based companies",
x = "Experience Level", y = "Salary (USD)") +
scale_fill_manual(values = c("EN" = "red", "MI" = "blue", "SE" = "green", "EX" = "purple"),
labels = exper_legend) +
guides(fill = guide_legend(title = "Experience Level Descriptions"))
source("~/Desktop/DSE5002/R Project/AdelineCasali_RProject.R", echo=TRUE)
# Create legend description
exper_legend <- c("EN" = "Entry-level / Junior",
"MI" = "Mid-level / Intermediate",
"SE" = "Senior-level / Expert",
"EX" = "Executive-level / Director")
# Order the levels of experience_level
salaries_df_ft$experience_level <- factor(salaries_df_ft$experience_level,
levels = c("EN", "MI", "SE", "EX"))
# Group by experience_level and calculate average salary for each level
median_salary_per_level <- salaries_df_ft %>%
group_by(experience_level) %>%
summarise(median_salary = median(salary_in_usd))
# Print the table
print(median_salary_per_level)
# Create the plot
ggplot(salaries_df_ft, aes(x = experience_level, y = salary_in_usd,
fill = experience_level)) +
geom_boxplot() +
scale_y_continuous(labels = scales::comma_format()) +
labs(title = "Data Science Salary by Experience Level",
x = "Experience Level", y = "Salary (USD)") +
scale_fill_manual(values = c("EN" = "red", "MI" = "blue", "SE" = "green", "EX" = "purple"),
labels = exper_legend) +
guides(fill = guide_legend(title = "Experience Level Descriptions"))
# Create the same plot but for US-based companies only
salaries_df_ft_us$experience_level <- factor(salaries_df_ft_us$experience_level,
levels = c("EN", "MI", "SE", "EX"))
median_salary_per_level_us <- salaries_df_ft_us %>%
group_by(experience_level) %>%
summarise(median_salary = median(salary_in_usd))
print(median_salary_per_level_us)
ggplot(salaries_df_ft_us, aes(x = experience_level, y = salary_in_usd,
fill = experience_level)) +
geom_boxplot() +
scale_y_continuous(labels = scales::comma_format()) +
labs(title = "Data Science Salary by Experience Level",
subtitle = "US-based companies",
x = "Experience Level", y = "Salary (USD)") +
scale_fill_manual(values = c("EN" = "red", "MI" = "blue", "SE" = "green", "EX" = "purple"),
labels = exper_legend) +
guides(fill = guide_legend(title = "Experience Level Descriptions"))
# Filter for most recent data, Senior/Expert level, Full-time employees
# for US-based, medium sized companies
filtered_salaries_df_2022 <- salaries_df %>%
filter(work_year == "2022", experience_level == "SE", employment_type == "FT",
company_location == "US", company_size == "M")
summary(filtered_salaries_df_2022)
# Filter for the same as above but all years and create linear model and plot
# Filter the dataset like above but include all years
filtered_salaries_df <- salaries_df %>%
filter(experience_level == "SE", employment_type == "FT",
company_location == "US", company_size == "M")
summary(filtered_salaries_df)
# Create a df containing median salary and IQR for each year, filtered dataset
filtered_salaries_med_iqr <- filtered_salaries_df %>%
group_by(work_year) %>%
summarize(median_salaries_usd = median(salary_in_usd),
q1 = quantile(salary_in_usd, 0.25),
q3 = quantile(salary_in_usd, 0.75))
print(filtered_salaries_med_iqr)
# Create a plot, and add a linear model
# Perform linear regression
filtered_lm_model <- lm(median_salaries_usd ~ work_year, data = salaries_med_iqr_us)
# Get R-squared
filtered_r_squared <- paste0(format(summary(filtered_lm_model)$r.squared, digits = 3))
# Get equation of the line
filtered_intercept <- formatC(coef(filtered_lm_model)[1], format = "f", digits = 2)
filtered_slope <- coef(filtered_lm_model)[2]
filtered_equation <- paste0("y = ", format(filtered_slope, digits = 2), "x + ",
format(filtered_intercept, digits = 2))
# Create the plot
ggplot(filtered_salaries_med_iqr, aes(x = work_year, y = median_salaries_usd)) +
geom_line(aes(y = median_salaries_usd), color = "blue") +
geom_ribbon(aes(ymin = q1, ymax = q3),
fill = "lightblue", alpha = 0.5) +
geom_point(aes(y = median_salaries_usd), color = "blue", size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dashed") +
scale_y_continuous(labels = scales::comma_format(), limits = c(40000, 200000)) +
scale_x_continuous(breaks = as.numeric(unique(filtered_salaries_med_iqr$work_year)),
labels = c("2020", "2021", "2022")) +
labs(title = "Median Data Science Salary (USD) over 2020 - 2022",
subtitle = paste("Filtered for Senior/Expert level, full-time employees for medium-sized, US-based companies",
"\n", "Equation:", equation, "\n", "R-squared:", r_squared),
x = "Year", y = "Median Salary (USD)")
# Based on extrapolation from the filtered linear model, the median salary for a
# senior/expert level data scientist from a medium sized US based company in
# 2023 will be roughly $154,000 USD. This trend is decreasing, potentially due
# to market rebounding after COVID.
# Based on all of the above data, I would recommend a minimum salary of $154,000
# (USD) up to a maximum of the 3rd quantile salary from 2022 of $169,000 (USD)
# in order to obtain the most competitive talent, capable of spearheading data
# science in the company and leading a team in the future.
# Filter for most recent data, Senior/Expert level, Full-time employees
# for US-based, medium sized companies
filtered_salaries_df_2022 <- salaries_df %>%
filter(work_year == "2022", experience_level == "SE", employment_type == "FT",
company_location == "US", company_size == "M")
summary(filtered_salaries_df_2022)
# Filter for the same as above but all years and create linear model and plot
# Filter the dataset like above but include all years
filtered_salaries_df <- salaries_df %>%
filter(experience_level == "SE", employment_type == "FT",
company_location == "US", company_size == "M")
summary(filtered_salaries_df)
# Create a df containing median salary and IQR for each year, filtered dataset
filtered_salaries_med_iqr <- filtered_salaries_df %>%
group_by(work_year) %>%
summarize(median_salaries_usd = median(salary_in_usd),
q1 = quantile(salary_in_usd, 0.25),
q3 = quantile(salary_in_usd, 0.75))
print(filtered_salaries_med_iqr)
# Create a plot, and add a linear model
# Perform linear regression
filtered_lm_model <- lm(median_salaries_usd ~ work_year, data = salaries_med_iqr_us)
# Get R-squared
filtered_r_squared <- paste0(format(summary(filtered_lm_model)$r.squared, digits = 3))
# Get equation of the line
filtered_intercept <- formatC(coef(filtered_lm_model)[1], format = "f", digits = 2)
filtered_slope <- coef(filtered_lm_model)[2]
filtered_equation <- paste0("y = ", format(filtered_slope, digits = 2), "x + ",
format(filtered_intercept, digits = 2))
# Create the plot
ggplot(filtered_salaries_med_iqr, aes(x = work_year, y = median_salaries_usd)) +
geom_line(aes(y = median_salaries_usd), color = "blue") +
geom_ribbon(aes(ymin = q1, ymax = q3),
fill = "lightblue", alpha = 0.5) +
geom_point(aes(y = median_salaries_usd), color = "blue", size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dashed") +
scale_y_continuous(labels = scales::comma_format(), limits = c(40000, 200000)) +
scale_x_continuous(breaks = as.numeric(unique(filtered_salaries_med_iqr$work_year)),
labels = c("2020", "2021", "2022")) +
labs(title = "Median Data Science Salary (USD) over 2020 - 2022",
subtitle = paste("Senior/Expert level, full-time employees for medium-sized, US-based companies",
"\n", "Equation:", equation, "\n", "R-squared:", r_squared),
x = "Year", y = "Median Salary (USD)")
# Based on extrapolation from the filtered linear model, the median salary for a
# senior/expert level data scientist from a medium sized US based company in
# 2023 will be roughly $154,000 USD. This trend is decreasing, potentially due
# to market rebounding after COVID.
# Based on all of the above data, I would recommend a minimum salary of $154,000
# (USD) up to a maximum of the 3rd quantile salary from 2022 of $169,000 (USD)
# in order to obtain the most competitive talent, capable of spearheading data
# science in the company and leading a team in the future.
# Filter for most recent data, Senior/Expert level, Full-time employees
# for US-based, medium sized companies
filtered_salaries_df_2022 <- salaries_df %>%
filter(work_year == "2022", experience_level == "SE", employment_type == "FT",
company_location == "US", company_size == "M")
summary(filtered_salaries_df_2022)
# Filter for the same as above but all years and create linear model and plot
# Filter the dataset like above but include all years
filtered_salaries_df <- salaries_df %>%
filter(experience_level == "SE", employment_type == "FT",
company_location == "US", company_size == "M")
summary(filtered_salaries_df)
# Create a df containing median salary and IQR for each year, filtered dataset
filtered_salaries_med_iqr <- filtered_salaries_df %>%
group_by(work_year) %>%
summarize(median_salaries_usd = median(salary_in_usd),
q1 = quantile(salary_in_usd, 0.25),
q3 = quantile(salary_in_usd, 0.75))
print(filtered_salaries_med_iqr)
# Create a plot, and add a linear model
# Perform linear regression
filtered_lm_model <- lm(median_salaries_usd ~ work_year, data = salaries_med_iqr_us)
# Get R-squared
filtered_r_squared <- paste0(format(summary(filtered_lm_model)$r.squared, digits = 3))
# Get equation of the line
filtered_intercept <- formatC(coef(filtered_lm_model)[1], format = "f", digits = 2)
filtered_slope <- coef(filtered_lm_model)[2]
filtered_equation <- paste0("y = ", format(filtered_slope, digits = 2), "x + ",
format(filtered_intercept, digits = 2))
# Create the plot
ggplot(filtered_salaries_med_iqr, aes(x = work_year, y = median_salaries_usd)) +
geom_line(aes(y = median_salaries_usd), color = "blue") +
geom_ribbon(aes(ymin = q1, ymax = q3),
fill = "lightblue", alpha = 0.5) +
geom_point(aes(y = median_salaries_usd), color = "blue", size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dashed") +
scale_y_continuous(labels = scales::comma_format(), limits = c(40000, 200000)) +
scale_x_continuous(breaks = as.numeric(unique(filtered_salaries_med_iqr$work_year)),
labels = c("2020", "2021", "2022")) +
labs(title = "Median Data Science Salary (USD) over 2020 - 2022",
subtitle = paste("Senior/Expert level, full-time employees at medium-sized, US-based companies",
"\n", "Equation:", equation, "\n", "R-squared:", r_squared),
x = "Year", y = "Median Salary (USD)")
# Based on extrapolation from the filtered linear model, the median salary for a
# senior/expert level data scientist from a medium sized US based company in
# 2023 will be roughly $154,000 USD. This trend is decreasing, potentially due
# to market rebounding after COVID.
# Based on all of the above data, I would recommend a minimum salary of $154,000
# (USD) up to a maximum of the 3rd quantile salary from 2022 of $169,000 (USD)
# in order to obtain the most competitive talent, capable of spearheading data
# science in the company and leading a team in the future.
# Filter for most recent data, Senior/Expert level, Full-time employees
# for US-based, medium sized companies
filtered_salaries_df_2022 <- salaries_df %>%
filter(work_year == "2022", experience_level == "SE", employment_type == "FT",
company_location == "US", company_size == "M")
summary(filtered_salaries_df_2022)
# Filter for the same as above but all years and create linear model and plot
# Filter the dataset like above but include all years
filtered_salaries_df <- salaries_df %>%
filter(experience_level == "SE", employment_type == "FT",
company_location == "US", company_size == "M")
summary(filtered_salaries_df)
# Create a df containing median salary and IQR for each year, filtered dataset
filtered_salaries_med_iqr <- filtered_salaries_df %>%
group_by(work_year) %>%
summarize(median_salaries_usd = median(salary_in_usd),
q1 = quantile(salary_in_usd, 0.25),
q3 = quantile(salary_in_usd, 0.75))
print(filtered_salaries_med_iqr)
# Create a plot, and add a linear model
# Perform linear regression
filtered_lm_model <- lm(median_salaries_usd ~ work_year, data = salaries_med_iqr_us)
# Get R-squared
filtered_r_squared <- paste0(format(summary(filtered_lm_model)$r.squared, digits = 3))
# Get equation of the line
filtered_intercept <- formatC(coef(filtered_lm_model)[1], format = "f", digits = 2)
filtered_slope <- coef(filtered_lm_model)[2]
filtered_equation <- paste0("y = ", format(filtered_slope, digits = 2), "x + ",
format(filtered_intercept, digits = 2))
# Create the plot
ggplot(filtered_salaries_med_iqr, aes(x = work_year, y = median_salaries_usd)) +
geom_line(aes(y = median_salaries_usd), color = "blue") +
geom_ribbon(aes(ymin = q1, ymax = q3),
fill = "lightblue", alpha = 0.5) +
geom_point(aes(y = median_salaries_usd), color = "blue", size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dashed") +
scale_y_continuous(labels = scales::comma_format(), limits = c(40000, 200000)) +
scale_x_continuous(breaks = as.numeric(unique(filtered_salaries_med_iqr$work_year)),
labels = c("2020", "2021", "2022")) +
labs(title = "Median Data Science Salary (USD) over 2020 - 2022",
subtitle = paste("Senior/Expert, full-time employees at medium-sized, US-based companies",
"\n", "Equation:", equation, "\n", "R-squared:", r_squared),
x = "Year", y = "Median Salary (USD)")
# Based on extrapolation from the filtered linear model, the median salary for a
# senior/expert level data scientist from a medium sized US based company in
# 2023 will be roughly $154,000 USD. This trend is decreasing, potentially due
# to market rebounding after COVID.
# Based on all of the above data, I would recommend a minimum salary of $154,000
# (USD) up to a maximum of the 3rd quantile salary from 2022 of $169,000 (USD)
# in order to obtain the most competitive talent, capable of spearheading data
# science in the company and leading a team in the future.
# Filter for most recent data, Senior/Expert level, Full-time employees
# for US-based, medium sized companies
filtered_salaries_df_2022 <- salaries_df %>%
filter(work_year == "2022", experience_level == "SE", employment_type == "FT",
company_location == "US", company_size == "M")
summary(filtered_salaries_df_2022)
# Filter for the same as above but all years and create linear model and plot
# Filter the dataset like above but include all years
filtered_salaries_df <- salaries_df %>%
filter(experience_level == "SE", employment_type == "FT",
company_location == "US", company_size == "M")
summary(filtered_salaries_df)
# Create a df containing median salary and IQR for each year, filtered dataset
filtered_salaries_med_iqr <- filtered_salaries_df %>%
group_by(work_year) %>%
summarize(median_salaries_usd = median(salary_in_usd),
q1 = quantile(salary_in_usd, 0.25),
q3 = quantile(salary_in_usd, 0.75))
print(filtered_salaries_med_iqr)
# Create a plot, and add a linear model
# Perform linear regression
filtered_lm_model <- lm(median_salaries_usd ~ work_year, data = filtered_salaries_med_iqr_us)
# Filter for most recent data, Senior/Expert level, Full-time employees
# for US-based, medium sized companies
filtered_salaries_df_2022 <- salaries_df %>%
filter(work_year == "2022", experience_level == "SE", employment_type == "FT",
company_location == "US", company_size == "M")
summary(filtered_salaries_df_2022)
# Filter for the same as above but all years and create linear model and plot
# Filter the dataset like above but include all years
filtered_salaries_df <- salaries_df %>%
filter(experience_level == "SE", employment_type == "FT",
company_location == "US", company_size == "M")
summary(filtered_salaries_df)
# Create a df containing median salary and IQR for each year, filtered dataset
filtered_salaries_med_iqr <- filtered_salaries_df %>%
group_by(work_year) %>%
summarize(median_salaries_usd = median(salary_in_usd),
q1 = quantile(salary_in_usd, 0.25),
q3 = quantile(salary_in_usd, 0.75))
print(filtered_salaries_med_iqr)
# Create a plot, and add a linear model
# Perform linear regression
filtered_lm_model <- lm(median_salaries_usd ~ work_year, data = filtered_salaries_med_iqr)
# Get R-squared
filtered_r_squared <- paste0(format(summary(filtered_lm_model)$r.squared, digits = 3))
# Get equation of the line
filtered_intercept <- formatC(coef(filtered_lm_model)[1], format = "f", digits = 2)
filtered_slope <- coef(filtered_lm_model)[2]
filtered_equation <- paste0("y = ", format(filtered_slope, digits = 2), "x + ",
format(filtered_intercept, digits = 2))
# Create the plot
ggplot(filtered_salaries_med_iqr, aes(x = work_year, y = median_salaries_usd)) +
geom_line(aes(y = median_salaries_usd), color = "blue") +
geom_ribbon(aes(ymin = q1, ymax = q3),
fill = "lightblue", alpha = 0.5) +
geom_point(aes(y = median_salaries_usd), color = "blue", size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dashed") +
scale_y_continuous(labels = scales::comma_format(), limits = c(40000, 200000)) +
scale_x_continuous(breaks = as.numeric(unique(filtered_salaries_med_iqr$work_year)),
labels = c("2020", "2021", "2022")) +
labs(title = "Median Data Science Salary (USD) over 2020 - 2022",
subtitle = paste("Senior/Expert, full-time employees at medium-sized, US-based companies",
"\n", "Equation:", equation, "\n", "R-squared:", r_squared),
x = "Year", y = "Median Salary (USD)")
# Based on extrapolation from the filtered linear model, the median salary for a
# senior/expert level data scientist from a medium sized US based company in
# 2023 will be roughly $154,000 USD. This trend is decreasing, potentially due
# to market rebounding after COVID.
# Based on all of the above data, I would recommend a minimum salary of $154,000
# (USD) up to a maximum of the 3rd quantile salary from 2022 of $169,000 (USD)
# in order to obtain the most competitive talent, capable of spearheading data
# science in the company and leading a team in the future.
source("~/Desktop/DSE5002/R Project/AdelineCasali_RProject.R", echo=TRUE)
# Filter for most recent data, Senior/Expert level, Full-time employees
# for US-based, medium sized companies
filtered_salaries_df_2022 <- salaries_df %>%
filter(work_year == "2022", experience_level == "SE", employment_type == "FT",
company_location == "US", company_size == "M")
summary(filtered_salaries_df_2022)
# Filter for the same as above but all years and create linear model and plot
# Filter the dataset like above but include all years
filtered_salaries_df <- salaries_df %>%
filter(experience_level == "SE", employment_type == "FT",
company_location == "US", company_size == "M")
summary(filtered_salaries_df)
# Create a df containing median salary and IQR for each year, filtered dataset
filtered_salaries_med_iqr <- filtered_salaries_df %>%
group_by(work_year) %>%
summarize(median_salaries_usd = median(salary_in_usd),
q1 = quantile(salary_in_usd, 0.25),
q3 = quantile(salary_in_usd, 0.75))
print(filtered_salaries_med_iqr)
# Create a plot, and add a linear model
# Perform linear regression
filtered_lm_model <- lm(median_salaries_usd ~ work_year, data = filtered_salaries_med_iqr)
# Get R-squared
filtered_r_squared <- paste0(format(summary(filtered_lm_model)$r.squared, digits = 3))
# Get equation of the line
filtered_intercept <- formatC(coef(filtered_lm_model)[1], format = "f", digits = 2)
filtered_slope <- coef(filtered_lm_model)[2]
filtered_equation <- paste0("y = ", format(filtered_slope, digits = 2), "x + ",
format(filtered_intercept, digits = 2))
# Create the plot
ggplot(filtered_salaries_med_iqr, aes(x = work_year, y = median_salaries_usd)) +
geom_line(aes(y = median_salaries_usd), color = "blue") +
geom_ribbon(aes(ymin = q1, ymax = q3),
fill = "lightblue", alpha = 0.5) +
geom_point(aes(y = median_salaries_usd), color = "blue", size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dashed") +
scale_y_continuous(labels = scales::comma_format(), limits = c(40000, 200000)) +
scale_x_continuous(breaks = as.numeric(unique(filtered_salaries_med_iqr$work_year)),
labels = c("2020", "2021", "2022")) +
labs(title = "Median Data Science Salary (USD) over 2020 - 2022",
subtitle = paste("Senior/Expert, full-time employees at medium-sized, US-based companies",
"\n", "Equation:", filtered_equation, "\n", "R-squared:", filtered_r_squared),
x = "Year", y = "Median Salary (USD)")
# Based on extrapolation from the filtered linear model, the median salary for a
# senior/expert level data scientist from a medium sized US based company in
# 2023 will be roughly $154,000 USD. This trend is decreasing, potentially due
# to market rebounding after COVID.
# Based on all of the above data, I would recommend a minimum salary of $154,000
# (USD) up to a maximum of the 3rd quantile salary from 2022 of $169,000 (USD)
# in order to obtain the most competitive talent, capable of spearheading data
# science in the company and leading a team in the future.
source("~/Desktop/DSE5002/R Project/AdelineCasali_RProject.R", echo=TRUE)
