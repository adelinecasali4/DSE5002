# Convert Order.Date and Ship.Date to date vectors
sales_df$Order.Date <- mdy(sales_df$Order.Date)
sales_df$Ship.Date <- mdy(sales_df$Ship.Date)
# Number of days between most recent and oldest order
num_days_min_max_order <- as.integer(max(sales_df$Order.Date) - min(sales_df$Order.Date))
# Conversion to years
num_years_min_max_order <- round(num_days_min_max_order / 365, digits = 2)
# Conversion to weeks
num_weeks_min_max_order <- round(num_days_min_max_order / 7, digits = 3)
cat("The number of days between the most recent order and oldest order is", num_days_min_max_order, ".\n")
cat("The number of years between the most recent order and oldest order is", num_years_min_max_order, ".\n")
cat("The number of weeks between the most recent order and oldest order is", num_weeks_min_max_order, ".\n")
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
library(stringr)
library(lubridate)
library(forcats)
sales_df <- read.delim("Data/sales_pipe.txt",
stringsAsFactors = FALSE,
sep = "|",
fileEncoding = "ISO-8859-1")
colnames(sales_df)[1] <- "Row.ID"
colnames(sales_df)
# Convert Order.Date and Ship.Date to date vectors
sales_df$Order.Date <- mdy(sales_df$Order.Date)
sales_df$Ship.Date <- mdy(sales_df$Ship.Date)
# Number of days between most recent and oldest order
num_days_min_max_order <- as.integer(max(sales_df$Order.Date) - min(sales_df$Order.Date))
# Conversion to years
num_years_min_max_order <- round(num_days_min_max_order / 365, digits = 2)
# Conversion to weeks
num_weeks_min_max_order <- round(num_days_min_max_order / 7, digits = 3)
# Results
cat("The number of days between the most recent order and oldest order is", num_days_min_max_order, ".\n")
cat("The number of years between the most recent order and oldest order is", num_years_min_max_order, ".\n")
cat("The number of weeks between the most recent order and oldest order is", num_weeks_min_max_order, ".\n")
# Calculate the shipping duration
ship_duration <- sales_df$Ship.Date - sales_df$Order.Date
# Calculate the average ship time
avg_ship_time <- mean(as.numeric(ship_duration), na.rm = T)
# Result
cat("The average number of days to ship an order is", avg_ship_time, ".\n")
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
library(stringr)
library(lubridate)
library(forcats)
sales_df <- read.delim("Data/sales_pipe.txt",
stringsAsFactors = FALSE,
sep = "|",
fileEncoding = "ISO-8859-1")
colnames(sales_df)[1] <- "Row.ID"
colnames(sales_df)
# Convert Order.Date and Ship.Date to date vectors
sales_df$Order.Date <- mdy(sales_df$Order.Date)
sales_df$Ship.Date <- mdy(sales_df$Ship.Date)
# Number of days between most recent and oldest order
num_days_min_max_order <- as.integer(max(sales_df$Order.Date) - min(sales_df$Order.Date))
# Conversion to years
num_years_min_max_order <- round(num_days_min_max_order / 365, digits = 2)
# Conversion to weeks
num_weeks_min_max_order <- round(num_days_min_max_order / 7, digits = 3)
# Results
cat("The number of days between the most recent order and oldest order is", num_days_min_max_order, ".\n")
cat("The number of years between the most recent order and oldest order is", num_years_min_max_order, ".\n")
cat("The number of weeks between the most recent order and oldest order is", num_weeks_min_max_order, ".\n")
# Calculate the shipping duration
ship_duration <- sales_df$Ship.Date - sales_df$Order.Date
# Calculate the average ship time
avg_ship_time <- round(mean(as.numeric(ship_duration), na.rm = T), digits = 2)
# Result
cat("The average number of days to ship an order is", avg_ship_time, ".\n")
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
library(stringr)
library(lubridate)
library(forcats)
sales_df <- read.delim("Data/sales_pipe.txt",
stringsAsFactors = FALSE,
sep = "|",
fileEncoding = "ISO-8859-1")
colnames(sales_df)[1] <- "Row.ID"
colnames(sales_df)
# Convert Order.Date and Ship.Date to date vectors
sales_df$Order.Date <- mdy(sales_df$Order.Date)
sales_df$Ship.Date <- mdy(sales_df$Ship.Date)
# Number of days between most recent and oldest order
num_days_min_max_order <- as.integer(max(sales_df$Order.Date) - min(sales_df$Order.Date))
# Conversion to years
num_years_min_max_order <- round(num_days_min_max_order / 365, digits = 1)
# Conversion to weeks
num_weeks_min_max_order <- round(num_days_min_max_order / 7, digits = 0)
# Results
cat("The number of days between the most recent order and oldest order is", num_days_min_max_order, ".\n")
cat("The number of years between the most recent order and oldest order is", num_years_min_max_order, ".\n")
cat("The number of weeks between the most recent order and oldest order is", num_weeks_min_max_order, ".\n")
# Calculate the shipping duration
ship_duration <- sales_df$Ship.Date - sales_df$Order.Date
# Calculate the average ship time
avg_ship_time <- round(mean(as.numeric(ship_duration), na.rm = T), digits = 2)
# Result
cat("The average number of days to ship an order is", avg_ship_time, ".\n")
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
count <- sum(str_count(customer_names, "\\bBill\\b"))
count <- sum(str_count(sales_df$Customer.Name, "\\bBill\\b"))
?str_split_fixed
# Split first and last names by space
sales_names <- str_split_fixed(string = sales_df$Customer.Name, pattern = " ", n = 2)
# Add first and last name columns to df
sales_df$Customer.First.Name = sales_names[ , 1]
sales_df$Customer.Last.Name = sales_names[ , 2]
# Count the number of customers with the first name Bill
length(unique(sales_df$Customer.First.Name == "Bill"))
library(stringr)
library(lubridate)
library(forcats)
sales_df <- read.delim("Data/sales_pipe.txt",
stringsAsFactors = FALSE,
sep = "|",
fileEncoding = "ISO-8859-1")
colnames(sales_df)[1] <- "Row.ID"
colnames(sales_df)
# Convert Order.Date and Ship.Date to date vectors
sales_df$Order.Date <- mdy(sales_df$Order.Date)
sales_df$Ship.Date <- mdy(sales_df$Ship.Date)
# Number of days between most recent and oldest order
num_days_min_max_order <- as.integer(max(sales_df$Order.Date) - min(sales_df$Order.Date))
# Conversion to years
num_years_min_max_order <- round(num_days_min_max_order / 365, digits = 1)
# Conversion to weeks
num_weeks_min_max_order <- round(num_days_min_max_order / 7, digits = 0)
# Results
cat("The number of days between the most recent order and oldest order is", num_days_min_max_order, ".\n")
cat("The number of years between the most recent order and oldest order is", num_years_min_max_order, ".\n")
cat("The number of weeks between the most recent order and oldest order is", num_weeks_min_max_order, ".\n")
# Calculate the shipping duration
ship_duration <- sales_df$Ship.Date - sales_df$Order.Date
# Calculate the average ship time
avg_ship_time <- round(mean(as.numeric(ship_duration), na.rm = T), digits = 2)
# Result
cat("The average number of days to ship an order is", avg_ship_time, ".\n")
# Split first and last names by space
sales_names <- str_split_fixed(string = sales_df$Customer.Name, pattern = " ", n = 2)
# Add first and last name columns to df
sales_df$Customer.First.Name = sales_names[ , 1]
sales_df$Customer.Last.Name = sales_names[ , 2]
# Count the number of customers with the first name Bill
length(unique(sales_df$Customer.First.Name == "Bill"))
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
View(sales_df)
# Split first and last names by space
sales_names <- str_split_fixed(string = sales_df$Customer.Name, pattern = " ", n = 2)
# Add first and last name columns to df
sales_df$Customer.First.Name = sales_names[ , 1]
sales_df$Customer.Last.Name = sales_names[ , 2]
# Count the number of customers with the first name Bill
length(sales_df$Customer.First.Name == "Bill", unique(sales_df$Customer.Last.Name))
# Split first and last names by space
sales_names <- str_split_fixed(string = sales_df$Customer.Name, pattern = " ", n = 2)
# Add first and last name columns to df
sales_df$Customer.First.Name = sales_names[ , 1]
sales_df$Customer.Last.Name = sales_names[ , 2]
# Filter for the first name Bill
customers_named_bill <- sales_df[sales_df$Customer.First.Name == "Bill"]
# Split first and last names by space
sales_names <- str_split_fixed(string = sales_df$Customer.Name, pattern = " ", n = 2)
# Add first and last name columns to df
sales_df$Customer.First.Name = sales_names[ , 1]
sales_df$Customer.Last.Name = sales_names[ , 2]
# Filter for the first name Bill
customers_named_bill <- sales_df$Customer.First.Name == "Bill"
# Count the number of customers with the first name Bill and unique last names
bill_unique <- length(unique(customers_named_bill$Customer.Last.Name))
library(stringr)
library(lubridate)
library(forcats)
sales_df <- read.delim("Data/sales_pipe.txt",
stringsAsFactors = FALSE,
sep = "|",
fileEncoding = "ISO-8859-1")
colnames(sales_df)[1] <- "Row.ID"
colnames(sales_df)
# Convert Order.Date and Ship.Date to date vectors
sales_df$Order.Date <- mdy(sales_df$Order.Date)
sales_df$Ship.Date <- mdy(sales_df$Ship.Date)
# Number of days between most recent and oldest order
num_days_min_max_order <- as.integer(max(sales_df$Order.Date) - min(sales_df$Order.Date))
# Conversion to years
num_years_min_max_order <- round(num_days_min_max_order / 365, digits = 1)
# Conversion to weeks
num_weeks_min_max_order <- round(num_days_min_max_order / 7, digits = 0)
# Results
cat("The number of days between the most recent order and oldest order is", num_days_min_max_order, ".\n")
cat("The number of years between the most recent order and oldest order is", num_years_min_max_order, ".\n")
cat("The number of weeks between the most recent order and oldest order is", num_weeks_min_max_order, ".\n")
# Calculate the shipping duration
ship_duration <- sales_df$Ship.Date - sales_df$Order.Date
# Calculate the average ship time
avg_ship_time <- round(mean(as.numeric(ship_duration), na.rm = T), digits = 2)
# Result
cat("The average number of days to ship an order is", avg_ship_time, ".\n")
# Split first and last names by space
sales_names <- str_split_fixed(string = sales_df$Customer.Name, pattern = " ", n = 2)
# Add first and last name columns to df
sales_df$Customer.First.Name = sales_names[ , 1]
sales_df$Customer.Last.Name = sales_names[ , 2]
# Filter for the first name Bill
customers_named_bill <- c(sales_df$Customer.First.Name == "Bill", sales_df$Customer.Last.Name)
# Count the number of customers with the first name Bill and unique last names
bill_unique <- length(unique(customers_named_bill$Customer.Last.Name))
# Split first and last names by space
sales_names <- str_split_fixed(string = sales_df$Customer.Name, pattern = " ", n = 2)
# Add first and last name columns to df
sales_df$Customer.First.Name = sales_names[ , 1]
sales_df$Customer.Last.Name = sales_names[ , 2]
# Filter for the first name Bill
customers_named_bill <- sales_df[sales_df$Customer.First.Name == "Bill"]
# Split first and last names by space
sales_names <- str_split_fixed(string = sales_df$Customer.Name, pattern = " ", n = 2)
# Add first and last name columns to df
sales_df$Customer.First.Name = sales_names[ , 1]
sales_df$Customer.Last.Name = sales_names[ , 2]
# Filter for the first name Bill
customers_named_bill <- subset(sales_df, sales_df$Customer.First.Name == "Bill")
# Count the number of customers with the first name Bill and unique last names
bill_unique <- length(unique(customers_named_bill$Customer.Last.Name))
View(customers_named_bill)
View(customers_named_bill)
library(stringr)
library(lubridate)
library(forcats)
sales_df <- read.delim("Data/sales_pipe.txt",
stringsAsFactors = FALSE,
sep = "|",
fileEncoding = "ISO-8859-1")
colnames(sales_df)[1] <- "Row.ID"
colnames(sales_df)
# Convert Order.Date and Ship.Date to date vectors
sales_df$Order.Date <- mdy(sales_df$Order.Date)
sales_df$Ship.Date <- mdy(sales_df$Ship.Date)
# Number of days between most recent and oldest order
num_days_min_max_order <- as.integer(max(sales_df$Order.Date) - min(sales_df$Order.Date))
# Conversion to years
num_years_min_max_order <- round(num_days_min_max_order / 365, digits = 1)
# Conversion to weeks
num_weeks_min_max_order <- round(num_days_min_max_order / 7, digits = 0)
# Results
cat("The number of days between the most recent order and oldest order is", num_days_min_max_order, ".\n")
cat("The number of years between the most recent order and oldest order is", num_years_min_max_order, ".\n")
cat("The number of weeks between the most recent order and oldest order is", num_weeks_min_max_order, ".\n")
# Calculate the shipping duration
ship_duration <- sales_df$Ship.Date - sales_df$Order.Date
# Calculate the average ship time
avg_ship_time <- round(mean(as.numeric(ship_duration), na.rm = T), digits = 2)
# Result
cat("The average number of days to ship an order is", avg_ship_time, ".\n")
# Split first and last names by space
sales_names <- str_split_fixed(string = sales_df$Customer.Name, pattern = " ", n = 2)
# Add first and last name columns to df
sales_df$Customer.First.Name = sales_names[ , 1]
sales_df$Customer.Last.Name = sales_names[ , 2]
# Filter for the first name Bill
customers_named_bill <- subset(sales_df, sales_df$Customer.First.Name == "Bill")
# Count the number of customers with the first name Bill and unique last names
bill_unique <- length(unique(customers_named_bill$Customer.Last.Name))
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
# Result
cat("The number of unique customers with the first name Bill is", bill_unique, ".\n")
?str_count
str_count(sales_df$Product.Name, pattern = "table")
sum(str_count(sales_df$Product.Name, pattern = "table"))
library(stringr)
library(lubridate)
library(forcats)
sales_df <- read.delim("Data/sales_pipe.txt",
stringsAsFactors = FALSE,
sep = "|",
fileEncoding = "ISO-8859-1")
colnames(sales_df)[1] <- "Row.ID"
colnames(sales_df)
# Convert Order.Date and Ship.Date to date vectors
sales_df$Order.Date <- mdy(sales_df$Order.Date)
sales_df$Ship.Date <- mdy(sales_df$Ship.Date)
# Number of days between most recent and oldest order
num_days_min_max_order <- as.integer(max(sales_df$Order.Date) - min(sales_df$Order.Date))
# Conversion to years
num_years_min_max_order <- round(num_days_min_max_order / 365, digits = 1)
# Conversion to weeks
num_weeks_min_max_order <- round(num_days_min_max_order / 7, digits = 0)
# Results
cat("The number of days between the most recent order and oldest order is", num_days_min_max_order, ".\n")
cat("The number of years between the most recent order and oldest order is", num_years_min_max_order, ".\n")
cat("The number of weeks between the most recent order and oldest order is", num_weeks_min_max_order, ".\n")
# Calculate the shipping duration
ship_duration <- sales_df$Ship.Date - sales_df$Order.Date
# Calculate the average ship time
avg_ship_time <- round(mean(as.numeric(ship_duration), na.rm = T), digits = 2)
# Result
cat("The average number of days to ship an order is", avg_ship_time, ".\n")
# Split first and last names by space
sales_names <- str_split_fixed(string = sales_df$Customer.Name, pattern = " ", n = 2)
# Add first and last name columns to df
sales_df$Customer.First.Name = sales_names[ , 1]
sales_df$Customer.Last.Name = sales_names[ , 2]
# Filter for the first name Bill
customers_named_bill <- subset(sales_df, sales_df$Customer.First.Name == "Bill")
# Count the number of customers with the first name Bill and unique last names
bill_unique <- length(unique(customers_named_bill$Customer.Last.Name))
# Result
cat("The number of unique customers with the first name Bill is", bill_unique, ".\n")
# Count number of mentions of table
count_table <- sum(str_count(sales_df$Product.Name, pattern = "table"))
# Result
cat("There are", count_table, "mentions of the word table.\n")
# Your code here
# Your code here
# Your code here
# Your code here
table(sales_df$State)
barplot(table(sales_df$Category[sales_df$State == "Texas"]))
?aggregate
aggregate(sales_df$Profit, list(sales_df$Region), mean)
aggregate(data = sales_df$Profit, list(sales_df$Region), mean)
aggregate(sales_df$Profit, list(sales_df$Region), mean)
aggregate(Profit ~ Region, data = sales_df, FUN = mean)
aggregate(Profit ~ Order.Date, data = sales_df, FUN = mean)
# Extract the year
sales_df$Order.Year <- format(df$Order.Date, "%Y")
# Extract the year
sales_df$Order.Year <- as_date(df$Order.Date, "%Y")
# Extract the year
sales_df$Order.Year <- year(df$Order.Date)
# Extract the year
sales_df$Order.Year <- year(sales_df$Order.Date)
# Aggregate
aggregate(Profit ~ Order.Year, data = sales_df, FUN = mean)
library(stringr)
library(lubridate)
library(forcats)
sales_df <- read.delim("Data/sales_pipe.txt",
stringsAsFactors = FALSE,
sep = "|",
fileEncoding = "ISO-8859-1")
colnames(sales_df)[1] <- "Row.ID"
colnames(sales_df)
# Convert Order.Date and Ship.Date to date vectors
sales_df$Order.Date <- mdy(sales_df$Order.Date)
sales_df$Ship.Date <- mdy(sales_df$Ship.Date)
# Number of days between most recent and oldest order
num_days_min_max_order <- as.integer(max(sales_df$Order.Date) - min(sales_df$Order.Date))
# Conversion to years
num_years_min_max_order <- round(num_days_min_max_order / 365, digits = 1)
# Conversion to weeks
num_weeks_min_max_order <- round(num_days_min_max_order / 7, digits = 1)
# Results
cat("The number of days between the most recent order and oldest order is", num_days_min_max_order, ".\n")
cat("The number of years between the most recent order and oldest order is", num_years_min_max_order, ".\n")
cat("The number of weeks between the most recent order and oldest order is", num_weeks_min_max_order, ".\n")
# Calculate the shipping duration
ship_duration <- sales_df$Ship.Date - sales_df$Order.Date
# Calculate the average ship time
avg_ship_time <- round(mean(as.numeric(ship_duration), na.rm = T), digits = 2)
# Result
cat("The average number of days to ship an order is", avg_ship_time, ".\n")
# Split first and last names by space
sales_names <- str_split_fixed(string = sales_df$Customer.Name, pattern = " ", n = 2)
# Add first and last name columns to df
sales_df$Customer.First.Name = sales_names[ , 1]
sales_df$Customer.Last.Name = sales_names[ , 2]
# Filter for the first name Bill
customers_named_bill <- subset(sales_df, sales_df$Customer.First.Name == "Bill")
# Count the number of customers with the first name Bill and unique last names
bill_unique <- length(unique(customers_named_bill$Customer.Last.Name))
# Result
cat("The number of unique customers with the first name Bill is", bill_unique, ".\n")
# Count number of mentions of table
count_table <- sum(str_count(sales_df$Product.Name, pattern = "table"))
# Result
cat("There are", count_table, "mentions of the word table.\n")
table(sales_df$State)
barplot(table(sales_df$Category[sales_df$State == "Texas"]))
aggregate(Profit ~ Region, data = sales_df, FUN = mean)
# Extract the year
sales_df$Order.Year <- year(sales_df$Order.Date)
# Aggregate
aggregate(Profit ~ Order.Year, data = sales_df, FUN = mean)
library(stringr)
library(lubridate)
library(forcats)
sales_df <- read.delim("Data/sales_pipe.txt",
stringsAsFactors = FALSE,
sep = "|",
fileEncoding = "ISO-8859-1")
colnames(sales_df)[1] <- "Row.ID"
colnames(sales_df)
# Convert Order.Date and Ship.Date to date vectors
sales_df$Order.Date <- mdy(sales_df$Order.Date)
sales_df$Ship.Date <- mdy(sales_df$Ship.Date)
# Number of days between most recent and oldest order
num_days_min_max_order <- as.integer(max(sales_df$Order.Date) - min(sales_df$Order.Date))
# Conversion to years
num_years_min_max_order <- round(num_days_min_max_order / 365, digits = 2)
# Conversion to weeks
num_weeks_min_max_order <- round(num_days_min_max_order / 7, digits = 1)
# Results
cat("The number of days between the most recent order and oldest order is", num_days_min_max_order, ".\n")
cat("The number of years between the most recent order and oldest order is", num_years_min_max_order, ".\n")
cat("The number of weeks between the most recent order and oldest order is", num_weeks_min_max_order, ".\n")
# Calculate the shipping duration
ship_duration <- sales_df$Ship.Date - sales_df$Order.Date
# Calculate the average ship time
avg_ship_time <- round(mean(as.numeric(ship_duration), na.rm = T), digits = 2)
# Result
cat("The average number of days to ship an order is", avg_ship_time, ".\n")
# Split first and last names by space
sales_names <- str_split_fixed(string = sales_df$Customer.Name, pattern = " ", n = 2)
# Add first and last name columns to df
sales_df$Customer.First.Name = sales_names[ , 1]
sales_df$Customer.Last.Name = sales_names[ , 2]
# Filter for the first name Bill
customers_named_bill <- subset(sales_df, sales_df$Customer.First.Name == "Bill")
# Count the number of customers with the first name Bill and unique last names
bill_unique <- length(unique(customers_named_bill$Customer.Last.Name))
# Result
cat("The number of unique customers with the first name Bill is", bill_unique, ".\n")
# Count number of mentions of table
count_table <- sum(str_count(sales_df$Product.Name, pattern = "table"))
# Result
cat("There are", count_table, "mentions of the word table.\n")
table(sales_df$State)
barplot(table(sales_df$Category[sales_df$State == "Texas"]))
aggregate(Profit ~ Region, data = sales_df, FUN = mean)
# Extract the year
sales_df$Order.Year <- year(sales_df$Order.Date)
# Aggregate
aggregate(Profit ~ Order.Year, data = sales_df, FUN = mean)
library(stringr)
library(lubridate)
library(forcats)
sales_df <- read.delim("Data/sales_pipe.txt",
stringsAsFactors = FALSE,
sep = "|",
fileEncoding = "ISO-8859-1")
colnames(sales_df)[1] <- "Row.ID"
colnames(sales_df)
# Convert Order.Date and Ship.Date to date vectors
sales_df$Order.Date <- mdy(sales_df$Order.Date)
sales_df$Ship.Date <- mdy(sales_df$Ship.Date)
# Number of days between most recent and oldest order
num_days_min_max_order <- as.integer(max(sales_df$Order.Date) - min(sales_df$Order.Date))
# Conversion to years
num_years_min_max_order <- round(num_days_min_max_order / 365, digits = 2)
# Conversion to weeks
num_weeks_min_max_order <- round(num_days_min_max_order / 7, digits = 1)
# Results
cat("The number of days between the most recent order and oldest order is", num_days_min_max_order, ".\n")
cat("The number of years between the most recent order and oldest order is", num_years_min_max_order, ".\n")
cat("The number of weeks between the most recent order and oldest order is", num_weeks_min_max_order, ".\n")
# Calculate the shipping duration
ship_duration <- sales_df$Ship.Date - sales_df$Order.Date
# Calculate the average ship time
avg_ship_time <- round(mean(as.numeric(ship_duration), na.rm = T), digits = 2)
# Result
cat("The average number of days to ship an order is", avg_ship_time, ".\n")
# Split first and last names by space
sales_names <- str_split_fixed(string = sales_df$Customer.Name, pattern = " ", n = 2)
# Add first and last name columns to df
sales_df$Customer.First.Name = sales_names[ , 1]
sales_df$Customer.Last.Name = sales_names[ , 2]
# Filter for the first name Bill
customers_named_bill <- subset(sales_df, sales_df$Customer.First.Name == "Bill")
# Count the number of customers with the first name Bill and unique last names
bill_unique <- length(unique(customers_named_bill$Customer.Last.Name))
# Result
cat("The number of unique customers with the first name Bill is", bill_unique, ".\n")
# Count number of mentions of table
count_table <- sum(str_count(sales_df$Product.Name, pattern = "table"))
# Result
cat("There are", count_table, "mentions of the word table.\n")
table(sales_df$State)
barplot(table(sales_df$Category[sales_df$State == "Texas"]))
aggregate(Profit ~ Region, data = sales_df, FUN = mean)
# Extract the year
sales_df$Order.Year <- year(sales_df$Order.Date)
# Aggregate
aggregate(Profit ~ Order.Year, data = sales_df, FUN = mean)
